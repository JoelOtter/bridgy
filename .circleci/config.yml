# CircleCI automatically reads this file from our repo and uses it for
# configuration. Docs:
# https://circleci.com/docs/2.0/configuration-reference/
# https://circleci.com/docs/2.0/sample-config/
version: 2

jobs:
  build:
    docker:
      # https://circleci.com/docs/2.0/google-container-engine/#selecting-a-base-image
      - image: google/cloud-sdk

    environment:
      # https://github.com/GoogleCloudPlatform/google-cloud-datastore/issues/168#issuecomment-294418422
      - APPLICATION_ID: dev~brid-gy

    steps:
      - checkout

      - restore_cache:
          key: venv-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Base dependencies
          command: |
            apt-get install -y python3
            # use granary and oauth-dropins master at head. (see pip install -e 's below.)
            cd /tmp; git clone https://github.com/snarfed/oauth-dropins.git
            # TODO: switch back to master
            cd /tmp/oauth-dropins; git checkout python3-ndb; git submodule sync; git submodule update --init
            cd /tmp/oauth-dropins/oauth_dropins/webutil; git checkout python3-ndb; git pull

            cd /tmp; git clone https://github.com/snarfed/granary.git
            cd /tmp/granary; git checkout python3-ndb

      - run:
          name: Python 3 dependencies
          command: |
            apt-get update
            apt-get install -y python3-venv python3-dev
            python3 -m venv local3
            . local3/bin/activate
            pip install -e /tmp/oauth-dropins/
            pip install -e /tmp/granary/
            pip install -U -r requirements.txt
            pip install coverage coveralls  # for https://coveralls.io/

      - run:
          name: Test Python 3
          command: |
            . local3/bin/activate
            CLOUDSDK_CORE_PROJECT=brid-gy gcloud beta emulators datastore start --consistency=1.0 < /dev/null >& /dev/null &
            sleep 5s
            DATASTORE_EMULATOR_HOST=localhost:8081 DATASTORE_DATASET=brid-gy python -m coverage run --source=. --omit=admin.py,appengine_config.py,local3/\*,logs.py,scripts/\*,tests/\* -m unittest discover -v
            python -m coverage html -d /tmp/coverage_html
            if [ "$COVERALLS_REPO_TOKEN" != "" ]; then coveralls || true; fi

      - save_cache:
          key: venv-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "local"

      - store_artifacts:
          path: /tmp/coverage_html
